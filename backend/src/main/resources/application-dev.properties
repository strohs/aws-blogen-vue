logging.level.com.cliff.aws.blogen=debug

# This controls if AWS resources should be created and bootstrapped with dummy user data during server start.
# It true, a cognito user pool, cognito identity pool, cognito application client and a DynamoDB table
# will be created. Five users will be created in the user pool and 26 posts will be created in DynamoDB.
# This property will default to false if missing.
blogen.bootstrap.data=true


# You can override your AWS accessKey and secretKey here.
# If you do so, they will override AWS's default credential provider chain.
# The default AWS credential provider chain will be searched in this order:
#
#  1. Environment Variables - AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY (RECOMMENDED since they are recognized by all
#     the AWS SDKs and CLI except for .NET), or AWS_ACCESS_KEY and AWS_SECRET_KEY (only recognized by Java SDK)
#  2. Java System Properties aws.accessKeyId and aws.secretKey
#  3. Credential profiles file at the default location (~/.aws/credentials) shared by all AWS SDKs and the AWS CLI
#  4. Credentials delivered through the Amazon EC2 container service if AWS_CONTAINER_CREDENTIALS_RELATIVE_URI"
#     environment variable is set and security manager has permission to access the variable,
#  5. Instance profile credentials delivered through the Amazon EC2 metadata service
aws.accesskey=
aws.secretkey=


# during development, set the embedded tomcat port to 8088 so that it doesn't conflict with
# any development servers running on Node.js, typically they run on port 8080 or 3000
server.port=8080
